apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'kotlin-android-extensions'
apply plugin: "realm-android"
apply plugin: 'deploygate'
apply from: "$rootDir/jacoco.gradle"
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.meronmks.chairs"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        debug{
            storeFile file("debug.keystore")
        }
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'androidx.test:runner:1.2.0-alpha04'
    testImplementation 'androidx.test:rules:1.2.0-alpha04'
    testImplementation "org.robolectric:robolectric:4.2"
    androidTestUtil 'androidx.test:orchestrator:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation 'com.deploygate:sdk:4.1.0'
    def coroutines_version = '1.0.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-firestore:18.2.0'
    implementation 'com.google.firebase:firebase-messaging:17.6.0'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-core:0.9.21'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-attr:0.9.21'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-measurement:0.9.21'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-disk:0.9.21'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-phoenix:0.9.21'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-shared-preferences:0.9.21'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha04'
}

deploygate {
    appOwnerName = "$System.env.DEPLOYGATE_USER"
    apiToken = "$System.env.DEPLOYGATE_TOKEN"
    deployments {
        // 'uploadDeployGateDevelopDebug'タスクで使用されます
        developDebug {
            sourceFile = file("${project.rootDir}/app/build/outputs/apk/debug/app-debug.apk")
            // 便利情報: 現在のコミットの git のハッシュ を使うとトラブルシューティングを楽にできます
            // ここでエラーになる場合はGitのパスが通ってない
            def hash = "git log -1 --oneline".execute([], project.rootDir).in.text.trim()
            // ビルドのメッセージとして設定します
            message = "debug build ${hash}"
        }
    }
}
kotlin {
    experimental {
        coroutines "enable"
    }
}